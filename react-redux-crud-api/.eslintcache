[{"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\index.js":"1","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\App.js":"2","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\reportWebVitals.js":"3","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\reducers\\index.js":"4","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\components\\Products.js":"5","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\components\\AddProduct.js":"6","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\components\\EditProduct.js":"7","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\reducers\\ProductRD.js":"8","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\reducers\\EditProductRD.js":"9","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\components\\Product_Item.js":"10","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\actions\\ActionTypes.js":"11","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\actions\\ProductsAction.js":"12","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\callapi\\callapi.js":"13"},{"size":571,"mtime":1608386098034,"results":"14","hashOfConfig":"15"},{"size":562,"mtime":1608557733205,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":258,"mtime":1608799004047,"results":"18","hashOfConfig":"15"},{"size":1202,"mtime":1609508312316,"results":"19","hashOfConfig":"15"},{"size":2641,"mtime":1608799857016,"results":"20","hashOfConfig":"15"},{"size":2491,"mtime":1608799948168,"results":"21","hashOfConfig":"15"},{"size":1494,"mtime":1608880138491,"results":"22","hashOfConfig":"15"},{"size":333,"mtime":1608793196431,"results":"23","hashOfConfig":"15"},{"size":722,"mtime":1608794061890,"results":"24","hashOfConfig":"15"},{"size":229,"mtime":1608878769001,"results":"25","hashOfConfig":"15"},{"size":1842,"mtime":1608878794750,"results":"26","hashOfConfig":"15"},{"size":299,"mtime":1608379340848,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1u0075z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\index.js",[],["61","62"],"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\App.js",["63"],"import logo from './logo.svg';\nimport './App.css';\nimport AddProduct from './components/AddProduct';\nimport Products from './components/Products';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport EditProduct from './components/EditProduct';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Products/>\n      </Route>\n      <Route exact path=\"/add\">\n        <AddProduct/>\n      </Route> \n      <Route exact path=\"/edit/:id\">\n          <EditProduct/>\n      </Route> \n    </Router>\n  );\n}\n\nexport default App;\n","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\reportWebVitals.js",[],"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\reducers\\index.js",[],"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\components\\Products.js",["64","65"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getProducts } from './../actions/ProductsAction';\r\nimport Product_Item from './Product_Item';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Products() {\r\n    let dispatch = useDispatch();\r\n    const products = useSelector(state => state.ProductRD);\r\n    useEffect(() => {\r\n        dispatch(getProducts());\r\n    }, []);\r\n    return (\r\n        <div className=\"mt-3\" style={{width:\"90%\",margin:\"auto\"}}>\r\n            <NavLink exact to=\"/add\">\r\n                <div className=\"btn btn-primary mb-2 text-white\">Add Product</div>\r\n            </NavLink>\r\n            <table className=\"table table-striped\" style={{width:\"100%\"}}>\r\n            <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Price</th>\r\n                    <th>Status</th>\r\n                    <th>Button</th>\r\n                </tr>\r\n                {products.map(product => {\r\n                    return <Product_Item key={product.id} products={product} />\r\n                })}\r\n               </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\components\\AddProduct.js",["66","67","68"],"import React, { useState } from 'react';\r\nimport { addProduct } from './../actions/ProductsAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction TodoInput() {\r\n    let [data, setData]=useState({\r\n        name:\"\",\r\n        price:\"\",\r\n        status:\"true\"\r\n    });\r\n    let dispatch = useDispatch();\r\n    function submit(e){\r\n        e.preventDefault();\r\n        var statusCover \r\n        if(data.status == \"true\"){\r\n            statusCover =true\r\n        }else if(data.status == \"false\"){\r\n            statusCover =false\r\n        }\r\n        console.log(statusCover)\r\n        dispatch(addProduct(\r\n            {\r\n            name:data.name,\r\n            price:data.price,\r\n            status:statusCover\r\n            }\r\n        ));\r\n        setData({\r\n            name:\"\",\r\n            price:\"\",\r\n            status:true\r\n        });\r\n    }\r\n    function GetValueInputForm(e){\r\n        const inputData={...data}\r\n        inputData[e.target.id]=e.target.value\r\n        if(inputData.status == \"false\"){\r\n            inputData.status = false\r\n        }else{\r\n            inputData.status = true\r\n        }     \r\n        setData(inputData) \r\n    }\r\n    return (\r\n        <div style={{width:\"50%\",margin:\"auto\"}}>\r\n            <div className=\"row m-2 p-3\">\r\n                <p className=\"mt-5 font-weight-bold mb-1\">Add Product</p>\r\n                <form onSubmit={(e)=>submit(e)} style={{width:\"100%\"}}>\r\n                    <label className=\"mt-3\">Name</label>\r\n                    <input className=\"form-control\" onChange={(e)=>GetValueInputForm(e)} value={data.name} id=\"name\"></input>\r\n                    <label className=\"mt-3\">Price</label>\r\n                    <input className=\"form-control\" onChange={(e)=>GetValueInputForm(e)} value={data.price} id=\"price\"></input>\r\n                    <label className=\"mt-3\">Status</label>\r\n                    <select className=\"form-control\" id=\"status\" onChange={(e)=>GetValueInputForm(e)} value={data.status}>\r\n                        <option defaultValue={true} value=\"true\">true</option>\r\n                        <option value=\"false\">false</option>\r\n                    </select>\r\n                    <NavLink exact to=\"/\">\r\n                    <button className=\"btn btn-primary mt-3 mr-2\" onClick={()=>dispatch(addProduct(data))}>Add</button>\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/\">\r\n                        <div className=\"btn btn-primary mt-3\">Close</div>\r\n                    </NavLink>\r\n                </form>        \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoInput;","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\components\\EditProduct.js",["69","70"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { editProduct,PostEditProduct } from './../actions/ProductsAction';\r\n\r\nfunction EditProduct() {\r\n    let [data, setData] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        status: true\r\n    });\r\n    const { id } = useParams();\r\n    let dispatch = useDispatch();\r\n    const productEdit = useSelector(state => state.EditProductRD);\r\n    useEffect(() => {\r\n        dispatch(editProduct(id));\r\n        setData(productEdit)\r\n    }, [productEdit.name]);\r\n\r\n    function GetValueInputForm(e){\r\n        const inputData={...data}\r\n        inputData[e.target.id]=e.target.value\r\n        if(inputData.status == \"false\"){\r\n            inputData.status = false\r\n        }else{\r\n            inputData.status = true\r\n        }     \r\n        setData(inputData)     \r\n    }\r\n    return (\r\n        <div style={{ width: \"50%\", margin: \"auto\" }}>\r\n            <div className=\"row m-2 p-3\">\r\n                <p className=\"mt-5 font-weight-bold mb-1\">Add Product</p>\r\n                <form style={{ width: \"100%\" }}>\r\n                    <label className=\"mt-3\">Name</label>\r\n                    <input className=\"form-control\" id=\"name\" value={data.name || \"\" }\r\n                    onChange={(e)=>GetValueInputForm(e)}></input>\r\n                    <label className=\"mt-3\">Price</label>\r\n                    <input className=\"form-control\" id=\"price\" value={data.price || \"\" }\r\n                    onChange={(e)=>GetValueInputForm(e)}></input>\r\n                    <label className=\"mt-3\">Status</label>\r\n                    <select className=\"form-control\" id=\"status\" value={data.status || \"\" }\r\n                    onChange={(e)=>GetValueInputForm(e)}>\r\n                        <option defaultValue={data.status} value=\"true\">true</option>\r\n                        <option value=\"false\">false</option>\r\n                    </select>\r\n                    <NavLink exact to=\"/\">\r\n                    <button className=\"btn btn-primary mt-3 mr-2\" onClick={()=>dispatch(PostEditProduct(data))}>Edit</button>\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/\">\r\n                        <div className=\"btn btn-primary mt-3\">Close</div>\r\n                    </NavLink>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditProduct;","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\reducers\\ProductRD.js",["71","72","73"],"import * as Types from './../actions/ActionTypes';\r\n\r\nvar initialState = [];\r\n\r\nconst ProductRD = (state = initialState, action) => {\r\n    let newProductList;\r\n    switch (action.type) {\r\n        case Types.GET_PRODUCTS:\r\n            state = action.payload;\r\n            return [...state];\r\n        case Types.ADD_PRODUCT:\r\n            newProductList = [...state];\r\n            let idMax = 0;\r\n            for (let i = 0; i < newProductList.length; i++) {\r\n                    idMax = newProductList[i].id;\r\n            }\r\n            action.payload.id=parseInt(1*idMax+1);\r\n            newProductList.push(action.payload);\r\n            console.log(action.payload.id);\r\n            return newProductList;\r\n        case Types.UPDATE_PRODUCT:\r\n            newProductList = [...state];\r\n            let index = -1;\r\n            for (let i = 0; i < newProductList.length; i++) {\r\n                index++;\r\n                if (newProductList[i].id == action.payload.id) {\r\n                    break;\r\n                }\r\n            }\r\n            if (index != -1) {\r\n                newProductList[index] = action.payload;\r\n                console.log(newProductList);\r\n                return newProductList;\r\n            }\r\n        case Types.DELETE_PRODUCT:\r\n            newProductList = [...state];\r\n            newProductList = newProductList.filter(todo => todo.id !== action.payload)\r\n            return newProductList;\r\n        default: return [...state];\r\n    }\r\n}\r\nexport default ProductRD;","D:\\training\\reactjs-training\\react-redux-crud-api\\src\\reducers\\EditProductRD.js",[],"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\components\\Product_Item.js",[],"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\actions\\ActionTypes.js",[],"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\actions\\ProductsAction.js",[],"D:\\training\\reactjs-training\\react-redux-crud-api\\src\\callapi\\callapi.js",[],["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":12,"column":8,"nodeType":"86","endLine":12,"endColumn":10,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":27,"column":28,"nodeType":"90","endLine":27,"endColumn":80},{"ruleId":"91","severity":1,"message":"92","line":16,"column":24,"nodeType":"93","messageId":"94","endLine":16,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":18,"column":30,"nodeType":"93","messageId":"94","endLine":18,"endColumn":32},{"ruleId":"91","severity":1,"message":"92","line":38,"column":29,"nodeType":"93","messageId":"94","endLine":38,"endColumn":31},{"ruleId":"84","severity":1,"message":"95","line":19,"column":8,"nodeType":"86","endLine":19,"endColumn":26,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"92","line":24,"column":29,"nodeType":"93","messageId":"94","endLine":24,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":26,"column":42,"nodeType":"93","messageId":"94","endLine":26,"endColumn":44},{"ruleId":"91","severity":1,"message":"97","line":30,"column":23,"nodeType":"93","messageId":"94","endLine":30,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":35,"column":9,"nodeType":"100","messageId":"101","endLine":38,"endColumn":35},{"ruleId":"76","replacedBy":"102"},{"ruleId":"78","replacedBy":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["106"],"react/jsx-pascal-case","Imported JSX component Product_Item must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'productEdit'. Either include them or remove the dependency array.",["107"],"Expected '!==' and instead saw '!='.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["104"],["105"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [dispatch]",{"range":"112","text":"113"},"Update the dependencies array to be: [dispatch, id, productEdit, productEdit.name]",{"range":"114","text":"115"},[434,436],"[dispatch]",[646,664],"[dispatch, id, productEdit, productEdit.name]"]